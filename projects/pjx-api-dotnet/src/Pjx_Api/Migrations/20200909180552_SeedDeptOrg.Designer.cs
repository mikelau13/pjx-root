// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pjx_Api.Data;

namespace Pjx_Api.Migrations
{
    [DbContext(typeof(CalendarDbContext))]
    [Migration("20200909180552_SeedDeptOrg")]
    partial class SeedDeptOrg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("Pjx.CalendarEntity.Models.CalendarEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("End")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Start")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("UserId")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId")
                        .HasName("Index_UserId");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("Pjx.CalendarEntity.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DepartmentId");

                    b.HasIndex("DepartmentId")
                        .HasName("Index_DepartmentId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Name = "Default Department A",
                            OrganizationId = 1
                        },
                        new
                        {
                            DepartmentId = 2,
                            Name = "Default Department B",
                            OrganizationId = 1
                        });
                });

            modelBuilder.Entity("Pjx.CalendarEntity.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("OwnerUserId")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.HasKey("OrganizationId");

                    b.HasIndex("OrganizationId")
                        .HasName("Index_OrganizationId");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            OrganizationId = 1,
                            Name = "Default Organization"
                        });
                });

            modelBuilder.Entity("Pjx.CalendarEntity.Models.CalendarEvent", b =>
                {
                    b.HasOne("Pjx.CalendarEntity.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pjx.CalendarEntity.Models.Department", b =>
                {
                    b.HasOne("Pjx.CalendarEntity.Models.Organization", "Organization")
                        .WithMany("Departments")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
